-------------------------------------------------
-어제 배운 것 정리 
-------------------------------------------------
[ 은닉화, 캡슐화 (=encapsulation) ] 
데이터는 보호하고, 이 데이터를 제어할 수 있는 메서드를 통해 객체를 이용할 수 있도록
클래스를 정의하는 기법 
코드로 구현하면 속성은 private 제한하고, 이 속성에 대한 getter/setter

[메서드 오버로딩(overroding)]
- 하나의 클래스 내에 동일한 메서드명을 여러개 둘 수 있는 메서드 정의 기법 
- 일반적인 프로그래밍 언어의 원칙상 메서드명은 중복될 수 없다..하지만 이 원칙만 너무 고수하면 
  메서드간 코드의 차이가 별로 없는 경우, 소중하게 명명한 메서드명을 다르게 줘야한다면 개발의 효율성
  이 떨어짐.
- 오버로딩 인정하는 경우 
  너무 똑같으면 안됨...즉 매개변수로 차별화를 둬야 함 
  1) 매개변수의 갯수 틀려야 함 
  2) 매개변수의 자료형이 틀려야 함 

[ 생성자 ]
디폴트 생성자: 컴파일러에 의해 기본적으로 정의되는 기본생성자 
왜 지원?  해당 클래스로부터 인스턴스를 생성할때, new 연산자뒤에 무조건적으로 생성자 호출이일어나므로
            만일 , 개발자가 생성자를 정의하지 않았을경우 존재하지 않는 생성자 호출이 되므로 컴파일에러
	    발생하게된다..따라서 sun에서 보이지 않는 기본형 생성자를 자동으로 지원...
	    단, 이 디폴트 생성자는 '개발자가 생성자 정의를 하지 않았을때만' 관여함

* 생성자도 메서드다!!! 고로 생성자 오버로딩 또한 지원된다..
